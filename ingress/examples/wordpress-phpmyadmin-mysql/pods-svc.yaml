# If you use digital ocean's managed kubernetes clusters
# Then the block storage will get created by default
# you don't need to set up the block storage, the PVC request will create it

---

#######
# IMPORTANT NOTE:
# These examples are dependent on the do-claim.yaml
# You must create the PVC claim to run this
# eg:
# $ kubectl apply -f do-claim.yaml
#########

---
# Don't hardcode the db password like this
# There are better ways to add secrets to kubernetes
# Ths is just for the example
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: Opaque
data:
  MYSQL_ROOT_PASSWORD: dm9kYWNvbTEyMw==
---
apiVersion: v1
kind: Secret
metadata:
  name: phpmyadmin-secrets
type: Opaque
data:
  PMA_HOST: bXlzcWw=
  PMA_PORT: MzMwNg==
---
apiVersion: v1
kind: Secret
metadata: 
  name: wordpress-secrets
data:
  WORDPRESS_DB_HOST: bXlzcWw6MzMwNg==
  WORDPRESS_DB_USER: cm9vdA==
  WORDPRESS_DB_PASSWORD: dm9kYWNvbTEyMw==
  WORDPRESS_DB_NAME: d29yZHByZXNz
  WORDPRESS_TABLE_PREFIX: d3Bf
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: expose-mysql
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
kind: Pod
apiVersion: v1
metadata:
  name: mysql
  labels: 
    app: mysql
spec:
  containers:
    # MYSQL
    - name: mysql
      image: mysql:5.5 
      env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-secrets
            key: MYSQL_ROOT_PASSWORD
      # literal string value example:
      - name: MYSQL_DATABASE
        value: wordpress
      ports: 
      - containerPort: 3306
        name: mysql
      volumeMounts:
        - name: database-storage
          mountPath: /var/lib/mysql
  volumes:
  - name: database-storage
    persistentVolumeClaim:
      claimName: csi-pvc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: expose-phpmyadmin
  name: phpmyadmin
spec:
  ports:
  - port: 80
  selector:
    app: wordpress
    tier: phpmyadmin
  type: ClusterIP
---
kind: Pod
apiVersion: v1
metadata:
  name: phpmyadmin
  labels: 
    app: wordpress
    tier: phpmyadmin
spec:
  containers:
    # PHPMYADMIN
    - name: phpmyadmin
      image: phpmyadmin/phpmyadmin:4.9
      env: 
      - name: PMA_HOST
        valueFrom:
          secretKeyRef:
            name: phpmyadmin-secrets
            key: PMA_HOST
      - name: PMA_PORT
        valueFrom:
          secretKeyRef:
            name: phpmyadmin-secrets
            key: PMA_PORT
    # WORDPRESS
    # - name: wordpress
    #   image: wordpress:4.8-apache
    #   env:
    #   - name: WORDPRESS_DB_HOST
    #     valueFrom:
    #       secretKeyRef:
    #         name: wordpress-secrets
    #         key: WORDPRESS_DB_HOST
    #   - name: WORDPRESS_DB_USER
    #     valueFrom:
    #       secretKeyRef:
    #         name: wordpress-secrets 
    #         key: WORDPRESS_DB_USER
    #   - name: WORDPRESS_DB_PASSWORD
    #     valueFrom:
    #       secretKeyRef:
    #         name: wordpress-secrets
    #         key: WORDPRESS_DB_PASSWORD
    #   - name: WORDPRESS_DB_NAME
    #     valueFrom:
    #       secretKeyRef:
    #         name: wordpress-secrets
    #         key: WORDPRESS_DB_NAME
    #   - name: WORDPRESS_TABLE_PREFIX
    #     valueFrom:
    #       secretKeyRef:
    #         name: wordpress-secrets
    #         key: WORDPRESS_TABLE_PREFIX
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: expose-wordpress
  name: wordpress-svc
spec:
  ports:
  # - nodePort: 30703
  #   port: 80
  #   protocol: TCP
  #   targetPort: 80
  #   name: wordpress
  - port: 80
  selector:
    app: wordpress
    tier: wordpress
  type: ClusterIP
---
kind: Pod
apiVersion: v1
metadata:
  name: wordpress
  labels: 
    app: wordpress
    tier: wordpress
spec:
  containers:
    # WORDPRESS
    - name: wordpress
      image: wordpress:4.8-apache
      env:
      - name: WORDPRESS_DB_HOST
        valueFrom:
          secretKeyRef:
            name: wordpress-secrets
            key: WORDPRESS_DB_HOST
      - name: WORDPRESS_DB_USER
        valueFrom:
          secretKeyRef:
            name: wordpress-secrets 
            key: WORDPRESS_DB_USER
      - name: WORDPRESS_DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: wordpress-secrets
            key: WORDPRESS_DB_PASSWORD
      - name: WORDPRESS_DB_NAME
        valueFrom:
          secretKeyRef:
            name: wordpress-secrets
            key: WORDPRESS_DB_NAME
      - name: WORDPRESS_TABLE_PREFIX
        valueFrom:
          secretKeyRef:
            name: wordpress-secrets
            key: WORDPRESS_TABLE_PREFIX
---
